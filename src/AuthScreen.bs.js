// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as SignIn from "aws-amplify-react-native/src/Auth/SignIn";
import * as SignUp from "aws-amplify-react-native/src/Auth/SignUp";
import * as Loading from "aws-amplify-react-native/src/Auth/Loading";
import * as Greetings from "aws-amplify-react-native/src/Auth/Greetings";
import * as ConfirmSignIn from "aws-amplify-react-native/src/Auth/ConfirmSignIn";
import * as ConfirmSignUp from "aws-amplify-react-native/src/Auth/ConfirmSignUp";
import * as VerifyContact from "aws-amplify-react-native/src/Auth/VerifyContact";
import * as ForgotPassword from "aws-amplify-react-native/src/Auth/ForgotPassword";
import * as RequireNewPassword from "aws-amplify-react-native/src/Auth/RequireNewPassword";

var Loading$1 = { };

var SignIn$1 = { };

var SignUp$1 = { };

var ConfirmSignIn$1 = { };

var ConfirmSignUp$1 = { };

var ForgotPassword$1 = { };

var RequireNewPassword$1 = { };

var Greetings$1 = { };

var VerifyContact$1 = { };

var defaultChildren = /* array */[
  React.createElement(VerifyContact.VerifyContact, { }),
  React.createElement(Greetings.Greetings, { }),
  React.createElement(ConfirmSignUp.ConfirmSignUp, { }),
  React.createElement(ForgotPassword.ForgotPassword, { }),
  React.createElement(RequireNewPassword.RequireNewPassword, { }),
  React.createElement(ConfirmSignIn.ConfirmSignIn, { }),
  React.createElement(SignUp.SignUp, { }),
  React.createElement(SignIn.SignIn, { }),
  React.createElement(Loading.Loading, { })
];

function useIsMounted(param) {
  var ref = React.useRef(false);
  React.useEffect((function () {
          ref.current = true;
          return (function (param) {
                    ref.current = false;
                    return /* () */0;
                  });
        }), ([]));
  return ref;
}

var initialState_authData = null;

var initialState_error = null;

var initialState = {
  authState: /* loading */150130300,
  authData: initialState_authData,
  error: initialState_error
};

function AuthScreen$Authenticator(Props) {
  Props.onStateChange;
  var children = Props.children;
  React.useState((function () {
          return initialState;
        }));
  useIsMounted(/* () */0);
  return children;
}

var Authenticator = {
  initialState: initialState,
  make: AuthScreen$Authenticator
};

export {
  Loading$1 as Loading,
  SignIn$1 as SignIn,
  SignUp$1 as SignUp,
  ConfirmSignIn$1 as ConfirmSignIn,
  ConfirmSignUp$1 as ConfirmSignUp,
  ForgotPassword$1 as ForgotPassword,
  RequireNewPassword$1 as RequireNewPassword,
  Greetings$1 as Greetings,
  VerifyContact$1 as VerifyContact,
  defaultChildren ,
  useIsMounted ,
  Authenticator ,
  
}
/* defaultChildren Not a pure module */
