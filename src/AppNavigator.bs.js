// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as GlobalStyle from "./GlobalStyle.bs.js";
import * as ReactNative from "react-native";
import * as ReactNavigation from "react-navigation";
import * as ReactNavigationStack from "react-navigation-stack";
import * as AppContainer$ReactNavigation from "reason-react-navigation/src/AppContainer.bs.js";

function AppNavigator$SignInScreen(Props) {
  var navigation = Props.navigation;
  var _signInAsync = function (param) {
    return ReactNative.AsyncStorage.setItem("userToken", "abc").then((function (_result) {
                  return Promise.resolve(Promise.resolve((navigation.navigate("App"), /* () */0)));
                }));
  };
  return React.createElement(ReactNative.View, {
              style: GlobalStyle.styles.container,
              children: React.createElement(ReactNative.Button, {
                    onPress: (function (param) {
                        _signInAsync(/* () */0);
                        return /* () */0;
                      }),
                    title: "Sign in!"
                  })
            });
}

AppNavigator$SignInScreen.navigationOptions = {
  title: "Please sign in"
};

var SignInScreen = {
  make: AppNavigator$SignInScreen
};

function AppNavigator$HomeScreen(Props) {
  var navigation = Props.navigation;
  return React.createElement(ReactNative.View, {
              style: GlobalStyle.styles.container,
              children: null
            }, React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      navigation.navigate("Other");
                      return /* () */0;
                    }),
                  title: "Show me more of the app"
                }), React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      ReactNative.AsyncStorage.clear();
                      navigation.navigate("Auth");
                      return /* () */0;
                    }),
                  title: "Actually, sign me out :)"
                }));
}

AppNavigator$HomeScreen.navigationOptions = {
  title: "Welcome to the app!"
};

var HomeScreen = {
  make: AppNavigator$HomeScreen
};

function AppNavigator$OtherScreen(Props) {
  var navigation = Props.navigation;
  return React.createElement(ReactNative.View, {
              style: GlobalStyle.styles.container,
              children: null
            }, React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      ReactNative.AsyncStorage.clear();
                      navigation.navigate("Auth");
                      return /* () */0;
                    }),
                  title: "I'm done, sign me out"
                }), React.createElement(ReactNative.StatusBar, {
                  barStyle: "default"
                }));
}

AppNavigator$OtherScreen.navigationOptions = {
  title: "Lots of features here"
};

var OtherScreen = {
  make: AppNavigator$OtherScreen
};

function AppNavigator$AuthLoadingScreen(Props) {
  var navigation = Props.navigation;
  var _bootstrapAsync = function (param) {
    return ReactNative.AsyncStorage.getItem("userToken").then((function (stringOrNull) {
                  console.log("CHECKING_AUTH_TOKEN", stringOrNull);
                  if (stringOrNull !== null) {
                    return Promise.resolve((navigation.navigate("App"), /* () */0));
                  } else {
                    return Promise.resolve((navigation.navigate("Auth"), /* () */0));
                  }
                }));
  };
  React.useEffect((function () {
          _bootstrapAsync(/* () */0);
          return ;
        }));
  return React.createElement(ReactNative.View, {
              style: GlobalStyle.styles.container,
              children: null
            }, React.createElement(ReactNative.ActivityIndicator, { }), React.createElement(ReactNative.StatusBar, {
                  barStyle: "default"
                }));
}

var AuthLoadingScreen = {
  make: AppNavigator$AuthLoadingScreen
};

var routes = {
  Home: AppNavigator$HomeScreen,
  Other: AppNavigator$OtherScreen
};

var $$navigator = ReactNavigationStack.createStackNavigator(routes, {
      mode: "modal",
      headerMode: "none"
    });

$$navigator.navigationOptions = {
  tabBarVisible: false
};

var AppStack = {
  routes: routes,
  $$navigator: $$navigator
};

var routes$1 = {
  SignIn: AppNavigator$SignInScreen
};

var $$navigator$1 = ReactNavigationStack.createStackNavigator(routes$1, {
      mode: "modal",
      headerMode: "none"
    });

$$navigator$1.navigationOptions = {
  tabBarVisible: false
};

var AuthStack = {
  routes: routes$1,
  $$navigator: $$navigator$1
};

var $$navigator$2 = ReactNavigation.createSwitchNavigator({
      App: $$navigator,
      Auth: $$navigator$1,
      AuthLoading: AppNavigator$AuthLoadingScreen
    }, {
      initialRouteName: "AuthLoading"
    });

var AuthFlowAppContainer = AppContainer$ReactNavigation.Make({
      $$navigator: $$navigator$2
    });

function AppNavigator(Props) {
  var screenProps = {
    someProp: 42
  };
  return React.createElement(AuthFlowAppContainer.make, {
              screenProps: screenProps
            });
}

var make = AppNavigator;

export {
  SignInScreen ,
  HomeScreen ,
  OtherScreen ,
  AuthLoadingScreen ,
  AppStack ,
  AuthStack ,
  AuthFlowAppContainer ,
  make ,
  
}
/*  Not a pure module */
